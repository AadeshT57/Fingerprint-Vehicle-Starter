#include<LiquidCrystal.h>

#define ADD_KEY       2
#define SEARCH_KEY    3
#define DELETE_KEY    6
#define INC_KEY       A5
#define DEC_KEY       A6

#define RELAY1        12
#define BUZZER        13



#define SOFT_RX_PIN     10
#define SOFT_TX_PIN     11

// LCD pinout define 

#define RS    7     //Register select in LCD
#define EN    8     //Enable lcd 
#define D4    9     // Data bit 1
#define D5    4     // Data bit 2
#define D6    5     // Data bit 3
#define D7    12    // Data bit 4

#define ROWS  2   // No. of rows
#define COLS  16  // No. of columns


LiquidCrystal lcd(RS, EN, D4, D5, D6, D7);            //creating lcd class object 




void lcdClear()                    //clear LCD screen or flush screen
{
  lcd.clear();
}


void introMessage()                //write your introduction of project our here
{
  lcdPrintLine1("FINGER PRINT    ");
  lcdPrintLine2("VEHICLE  STARTER    ");
  delay(2000);
  lcdPrintLine1("BY V.E.S.P.   ");
  lcdPrintLine2("YEAR 18 -19   ");
  delay(2000);
}









void onRelay(int pin)
{
  if( RELAY_LOG == HIGH )
  {
    digitalWrite(pin, HIGH);
  } 
  else
  {
    digitalWrite(pin, LOW);
  }
}


void offRelay(int pin)
{
  if( RELAY_LOG == HIGH )
  {
    digitalWrite(pin, LOW);
  } 
  else
  {
    digitalWrite(pin, HIGH);
  }
}

void playBuzzer()
{
  digitalWrite(BUZZER, HIGH);
  delay(5000);
  digitalWrite(BUZZER, LOW);
}







int  getFingerprintChoice()
{
  int ret_choice;

  ret_choice = 0;

   //=================================================================================
   lcdPrintLine1("Enter Choice.               ");
   lcdPrintLine2("ADD-SEARCH-DEL              ");
  //=================================================================================   
    
  while(1)
  {
     if( digitalRead(ADD_KEY) == LOW )
    {
      ret_choice = ADD;
      break;
    }

    if( digitalRead(SEARCH_KEY) == LOW )
    {
      ret_choice = SEARCH;
      break;
    }

    if( digitalRead(DELETE_KEY) == LOW )
    {
      ret_choice = DELETE;
      break;
    }
  } 

  return ret_choice;
}



uint8_t enterIDForFingerPrint()
{
  
  count = 0;
  //=================================================================================
   lcdPrintLine1("Enter ID  Value               ");
   lcdPrintLine2(String(count) + "                              ");
  //================================================================================= 
  delay(2000);
       
  while(1)
  {
   if( digitalRead(ADD_KEY) == LOW )
   {    
      count  = count  - DEFAULT_ID_STEP;    
   }

   if( digitalRead(SEARCH_KEY) == LOW )
   {    
      count  = count  + DEFAULT_ID_STEP;      
   }   

   if( digitalRead(DELETE_KEY) == LOW )
   {
    break;
   }
   lcdPrintLine2(String(count) + "                       ");
   delay(500);
  }

  return count;
}



SoftwareSerial mySerial(SOFT_RX_PIN, SOFT_TX_PIN); 

Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

uint8_t id;
int     lastID = 0;

void setup()  
{
 
 
  finger.begin(57600);
  
  if (finger.verifyPassword()) {
  } else {
  }
   pinMode(ADD_KEY, INPUT); 
  pinMode(SEARCH_KEY, INPUT); 
  pinMode(DELETE_KEY, INPUT);
  pinMode(RELAY1, OUTPUT); 
  pinMode(BUZZER, OUTPUT); 
  offRelay(RELAY1);
   initLCD();
   introMessage() ;
}


void loop()                     // run over and over again
{
  
//=================================================================================================================

  int choice;
  int newid;

 
  choice = getFingerprintChoice();

  switch(choice)
  {
    case ADD:
    {
      //==========================================================================
      lcdPrintLine1("Keep your finger           ");
      lcdPrintLine2("please..                   ");
      delay(3000);
      //==========================================================================
      
      if( fingerPrintAlreadyExistInDatabase() == true )
      {
        //==========================================================================
        lcdPrintLine1("Finger Print                 ");
        lcdPrintLine2("Already Exist...                     ");
        delay(1000);
        //==========================================================================
      }
      else
      {
        newid = getNextUniqueID();
        id = newid;        
        getFingerprintEnroll();
      }
    }
    break;

    case SEARCH:
    {
      
        int temp_id = getFingerprintIDez();          
              
        if(temp_id < 0)
        {
          //==========================================================================
          lcdPrintLine1("Keep your finger                ");
          lcdPrintLine2("till light RED...            ");          
          //==========================================================================   
        }
        else
        {
          //==========================================================================
          lcdPrintLine1("Finger Print Match                ");
          lcdPrintLine2("with ID = " + String(temp_id) + "                ");
          nofinger = false;
          delay(2000);
          lcdPrintLine1("Relay on                ");
          lcdPrintLine2("......                  ");
          onRelay(RELAY1);
          //onRelayOnAnalog(RELAY1);
          delay(5000);
          offRelay(RELAY1);
          break;
          //==========================================================================       
        }
        
      }
        if( nofinger == true)
        {
         lcdPrintLine1("No, Finger Print                 ");
          lcdPrintLine2("match found...                     ");
          playBuzzer();     
          delay(2000);                        
          //==========================================================================
        }
      
    }
    break;

    case DELETE:
    {
      if ( deleteFingerprint(tmp_del_id ) == FINGERPRINT_OK) 
      {
        //==========================================================================
        lcdPrintLine1("Finger Print Deleted              ");
        lcdPrintLine2("with ID = " + String(tmp_del_id) + "                ");
        delay(1000);
        //==========================================================================          
      } 
      else
      {
        //==========================================================================
        lcdPrintLine1("Error delete finger                ");
        lcdPrintLine2("print with ID = " + String(tmp_del_id) + "                ");
        delay(1000);
        //==========================================================================   
      }
    }
    break;    
  }

  delay(1000);
}


//===========================================MY function ================================
boolean fingerPrintAlreadyExistInDatabase()
{
  if(getFingerprintIDez() < 0)
  {
    return false;
  }
  else
  {
    return true;
  }
}

int getNextUniqueID()
{
  finger.getTemplateCount();
  
  return (finger.templateCount + DEFAULT_ID_STEP) ;
}
//==========================================MY function ends here =======================


//=================================== Finger print enroll or add code function ==========
uint8_t getFingerprintEnroll() {

  int p = -1;
  //Serial.print("Waiting for valid finger to enroll as #"); Serial.println(id);
    lcdPrintLine1("Keep your finger         ");
    lcdPrintLine2("enrol ID=" + String(id) + "              ");
  //==========================================================================
  while (p != FINGERPRINT_OK) {
    p = finger.getImage();
    switch (p) {
    case FINGERPRINT_OK:
     // Serial.println("Image taken");
      //==========================================================================
      lcdPrintLine1("Image taken            ");
      lcdPrintLine2("                       ");
      //==========================================================================
      break;
    case FINGERPRINT_NOFINGER:
      //Serial.println(".");
      break;
    case FINGERPRINT_PACKETRECIEVEERR:
     // Serial.println("Communication error");
      break;
    case FINGERPRINT_IMAGEFAIL:
     // Serial.println("Imaging error");
      break;
    default:
     // Serial.println("Unknown error");
      break;
    }
  }

  
  
  }
  
  //Serial.println("Remove finger");
  //==========================================================================
   lcdPrintLine1("Remove finger           ");
   lcdPrintLine2("...                     ");
  //==========================================================================
  
  delay(2000);
  p = 0;
  while (p != FINGERPRINT_NOFINGER) {
    p = finger.getImage();
  }
 // Serial.print("ID "); Serial.println(id);
  p = -1;
 // Serial.println("Place same finger again");
  //==========================================================================
   lcdPrintLine1("Place same finger            ");
   lcdPrintLine2("again...                     ");
  //==========================================================================
  

  